@using IlmAcademy.ViewModels
@model PagesViewModel
@{
    var Layout = "/Views/Shared/_Layout.cshtml";
}
<style>
    /* Wrap gallery in a container */
    .gallery-container {
    max-width: 1200px; /* adjust as needed */
    margin: 0 auto;
    padding: 2rem 1rem;
    }

    /* Gallery grid: 3 columns */
    .gallery {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 1rem; /* space between images */
    }

    .gallery img {
    width: 100%;
    height: 220px;
    object-fit: cover;
    cursor: pointer;
    border-radius: 10px;
    transition: transform 0.3s ease;
    }

    .gallery img:hover {
    transform: scale(1.05);
    }

    /* Lightbox overlay */
    .lightbox {
    position: fixed;
    inset: 0;
    background: rgba(0,0,0,0.9);
    display: none;
    justify-content: center;
    align-items: center;
    z-index: 1050;
    }

    /* Image inside lightbox */
    .lightbox img {
    max-width: 90%;
    max-height: 85vh;
    border-radius: 10px;
    box-shadow: 0 8px 30px rgba(0,0,0,0.6);
    background: #111;
    padding: 8px; /* small padding */
    filter:none!important
    }

    /* Close button */
    .lightbox .close-btn {
    position: absolute;
    top: 20px;
    right: 30px;
    font-size: 2rem;
    color: white;
    cursor: pointer;
    user-select: none;
    }

    /* Responsive breakpoints */
    @@media (max-width: 992px) { /* tablets */
    .gallery

    {
    grid-template-columns: repeat(2, 1fr);
    }

    }
    @@media (max-width: 576px) { /* mobile */
    .gallery

    {
    grid-template-columns: 1fr;
    }

    }
</style>


<div class="breadcrumb-area" style="background:url(/assets/images/background.webp) no-repeat top; background-size:cover; z-index:2">
    <div class="slider-mask"></div>
    <div class="container">
        <div class="row">
            <div class="col-12">
                <div class="breadcrumb_box text-center">
                    <h1 class="breadcrumb-title">@Model.ContentTypeSlug.ContentTitle</h1>
                    <p class="text-white">

                        @Html.Raw(Model.ContentTypeSlug?.CustomFields?.FirstOrDefault(x => x.Description == "Short Description").Value)

                    </p>
                </div>
            </div>
        </div>
    </div>
</div>



<!-- Gallery Section -->

<section class="gallery-container">
    <div class="gallery">
        @foreach(var i in Model.ContentTypeSlug.contentPhotos)
        {
            <img src="@PagesViewModel.ContentUrl/@i.PhotoSource"
                 alt="@i.PhotoContent Images">
        }
    
     

    </div>
</section>

<!-- Lightbox -->
<div class="lightbox" id="lightbox">
    <span class="close-btn" id="lightboxClose">&times;</span>
    <img id="lightboxImg" src="" alt="Preview">
</div>

<script>
    const lightbox = document.getElementById("lightbox");
    const lightboxImg = document.getElementById("lightboxImg");
    const closeBtn = document.getElementById("lightboxClose");

    // Open on click
    document.querySelectorAll(".gallery img").forEach(img => {
      img.addEventListener("click", () => {
        lightboxImg.src = img.src;
        lightbox.style.display = "flex";
      });
    });

    // Close on click or Esc
    closeBtn.addEventListener("click", () => lightbox.style.display = "none");
    lightbox.addEventListener("click", e => {
      if (e.target === lightbox) lightbox.style.display = "none";
    });
    document.addEventListener("keydown", e => {
      if (e.key === "Escape") lightbox.style.display = "none";
    });
</script>
